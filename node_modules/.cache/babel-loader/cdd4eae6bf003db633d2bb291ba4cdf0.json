{"ast":null,"code":"var _jsxFileName = \"D:\\\\Redux\\\\adding-authentication\\\\src\\\\store\\\\auth-context.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet logoutTimer;\nconst AuthContext = /*#__PURE__*/createContext({\n  token: '',\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\n\nconst caculateRemainingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  const remainingDuration = adjExpirationTime - currentTime;\n  return remainingDuration;\n};\n\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem('token');\n  const storedExpirationDate = localStorage.getItem('expirationTime');\n  const remainingTime = caculateRemainingTime(storedExpirationDate);\n\n  if (remainingTime <= 3600) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    duration: remainingTime\n  };\n};\n\nexport const AuthContextProvider = props => {\n  _s();\n\n  const tokenData = retrieveStoredToken();\n  let initialToken;\n\n  if (tokenData) {\n    initialToken = tokenData.token;\n  }\n\n  const [token, setToken] = useState(initialToken);\n  const userLoggedIn = !!token;\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  };\n\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem('token', token);\n    localStorage.setItem('expirationTime', expirationTime);\n    const remainingTime = caculateRemainingTime(expirationTime);\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      console.log(tokenData.duration);\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData, logoutHandler]);\n  const contextValue = {\n    token: token,\n    isLoggedIn: userLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthContextProvider, \"w4PGjzwU+znkNWWv/cmJxDZqQPE=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","logoutTimer","AuthContext","token","isLoggedIn","login","logout","caculateRemainingTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","remainingDuration","retrieveStoredToken","storedToken","localStorage","getItem","storedExpirationDate","remainingTime","removeItem","duration","AuthContextProvider","props","tokenData","initialToken","setToken","userLoggedIn","logoutHandler","clearTimeout","loginHandler","setItem","setTimeout","console","log","contextValue","children"],"sources":["D:/Redux/adding-authentication/src/store/auth-context.js"],"sourcesContent":["import {createContext, useState, useEffect} from 'react';\r\n\r\nlet logoutTimer;\r\n\r\nconst AuthContext = createContext({\r\n    token: '',\r\n    isLoggedIn: false,\r\n    login: (token) => {},\r\n    logout: () => {}\r\n});\r\n\r\nconst caculateRemainingTime = (expirationTime) => {\r\n    const currentTime = new Date().getTime();\r\n    const adjExpirationTime = new Date(expirationTime).getTime();\r\n\r\n    const remainingDuration = adjExpirationTime - currentTime;\r\n    return remainingDuration;    \r\n};\r\n\r\nconst retrieveStoredToken = () => {\r\n    const storedToken = localStorage.getItem('token');\r\n    const storedExpirationDate = localStorage.getItem('expirationTime');\r\n\r\n    const remainingTime = caculateRemainingTime(storedExpirationDate);\r\n\r\n    if (remainingTime <= 3600) {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('expirationTime');\r\n        return null;\r\n    }\r\n\r\n    return {\r\n        token: storedToken,\r\n        duration: remainingTime\r\n    };\r\n};\r\n\r\nexport const AuthContextProvider = (props) => {\r\n    const tokenData = retrieveStoredToken();\r\n    let initialToken;\r\n    if (tokenData) {\r\n        initialToken = tokenData.token;\r\n    }\r\n\r\n    const [token, setToken] = useState(initialToken);\r\n\r\n    const userLoggedIn = !!token;\r\n\r\n    const logoutHandler = () => {\r\n        setToken(null);\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('expirationTime');\r\n\r\n        if (logoutTimer) {\r\n            clearTimeout(logoutTimer);\r\n        }\r\n    };\r\n\r\n    const loginHandler = (token, expirationTime) => {\r\n        setToken(token);\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('expirationTime', expirationTime);\r\n\r\n        const remainingTime = caculateRemainingTime(expirationTime);\r\n        logoutTimer = setTimeout(logoutHandler, remainingTime);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (tokenData) {\r\n            console.log(tokenData.duration);\r\n            logoutTimer = setTimeout(logoutHandler, tokenData.duration);\r\n        }\r\n    }, [tokenData, logoutHandler]);\r\n\r\n    const contextValue = {\r\n        token: token,\r\n        isLoggedIn: userLoggedIn,\r\n        login: loginHandler,\r\n        logout: logoutHandler\r\n    };\r\n\r\n    return(\r\n        <AuthContext.Provider value={contextValue}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthContext;"],"mappings":"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"},"metadata":{},"sourceType":"module"}